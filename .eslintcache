[{"C:\\Users\\AKIF\\Desktop\\intro-to-web-development\\src\\index.js":"1","C:\\Users\\AKIF\\Desktop\\intro-to-web-development\\src\\reportWebVitals.js":"2","C:\\Users\\AKIF\\Desktop\\intro-to-web-development\\src\\App.js":"3","C:\\Users\\AKIF\\Desktop\\intro-to-web-development\\src\\components\\Login2\\Main.jsx":"4","C:\\Users\\AKIF\\Desktop\\intro-to-web-development\\src\\components\\AllRecipies\\Footer.jsx":"5","C:\\Users\\AKIF\\Desktop\\intro-to-web-development\\src\\components\\AllRecipies\\Header.jsx":"6","C:\\Users\\AKIF\\Desktop\\intro-to-web-development\\src\\components\\AllRecipies\\AllRecipies.jsx":"7","C:\\Users\\AKIF\\Desktop\\intro-to-web-development\\src\\components\\AllRecipies\\RecipeList.jsx":"8","C:\\Users\\AKIF\\Desktop\\intro-to-web-development\\src\\components\\AllRecipies\\ShowRecipies.jsx":"9","C:\\Users\\AKIF\\Desktop\\intro-to-web-development\\src\\components\\Login\\Login5.jsx":"10","C:\\Users\\AKIF\\Desktop\\intro-to-web-development\\src\\redux\\store\\Provider.js":"11","C:\\Users\\AKIF\\Desktop\\intro-to-web-development\\src\\redux\\reducers\\LoginReducer.js":"12","C:\\Users\\AKIF\\Desktop\\intro-to-web-development\\src\\redux\\actions\\LoginActionTypes.js":"13","C:\\Users\\AKIF\\Desktop\\intro-to-web-development\\src\\redux\\actions\\LoginAction.js":"14","C:\\Users\\AKIF\\Desktop\\intro-to-web-development\\src\\components\\Redirect.js":"15"},{"size":566,"mtime":1608938217871,"results":"16","hashOfConfig":"17"},{"size":375,"mtime":1608412065670,"results":"18","hashOfConfig":"17"},{"size":1138,"mtime":1608938227768,"results":"19","hashOfConfig":"17"},{"size":3674,"mtime":1608933884674,"results":"20","hashOfConfig":"17"},{"size":502,"mtime":1608412065654,"results":"21","hashOfConfig":"17"},{"size":3131,"mtime":1608935011015,"results":"22","hashOfConfig":"17"},{"size":2231,"mtime":1608930777925,"results":"23","hashOfConfig":"17"},{"size":563,"mtime":1608921952981,"results":"24","hashOfConfig":"17"},{"size":1567,"mtime":1608412065670,"results":"25","hashOfConfig":"17"},{"size":243,"mtime":1608929333103,"results":"26","hashOfConfig":"17"},{"size":362,"mtime":1608928177289,"results":"27","hashOfConfig":"17"},{"size":692,"mtime":1608939237433,"results":"28","hashOfConfig":"17"},{"size":74,"mtime":1608931123876,"results":"29","hashOfConfig":"17"},{"size":250,"mtime":1608931357753,"results":"30","hashOfConfig":"17"},{"size":184,"mtime":1608932724694,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1arsx0w",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\AKIF\\Desktop\\intro-to-web-development\\src\\index.js",[],"C:\\Users\\AKIF\\Desktop\\intro-to-web-development\\src\\reportWebVitals.js",[],["65","66"],"C:\\Users\\AKIF\\Desktop\\intro-to-web-development\\src\\App.js",[],"C:\\Users\\AKIF\\Desktop\\intro-to-web-development\\src\\components\\Login2\\Main.jsx",["67","68","69","70"],"import React, { useState } from \"react\";\r\nimport {useStore} from '../../redux/store/Provider';\r\nimport {setUSer} from '../../redux/actions/LoginAction';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  Button,\r\n  Container,\r\n  Jumbotron,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Input,\r\n  Card,\r\n  CardImg,\r\n  CardBody,\r\n} from \"reactstrap\";\r\n\r\nconst Main = () => {\r\n  let history = useHistory();\r\n  const [username, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [encPassword, seteEncPassword] = useState(\"\");\r\n  const [dncPassword, setDncPassword] = useState(\"\");\r\n  const [store,dispatch] = useStore();\r\n  const onChangePassword = (e) => {\r\n    setPassword(e);\r\n    seteEncPassword(encrypt(e));\r\n  };\r\n  const onChangeUserName = (e) => {\r\n    setUserName(e);\r\n\r\n  };\r\n  function onLogin() {\r\n    dispatch(setUSer(username));\r\n    history.push(\"/\");\r\n  }\r\n  const handleKeyPress = (target) => {};\r\n  console.log(encPassword);\r\n  console.log(decrypted(encPassword));\r\n  function encrypt(pass) {\r\n    var number;\r\n    var string = [];\r\n    var c;\r\n    for (var i = 0; i < pass.length; i++) {\r\n      for (var j = 0; j < 3; j++) {\r\n        do {\r\n          number = Math.floor(Math.random() * (94 - 33) + 33);\r\n        } while ((number >= 48 && number <= 57) || number === 44); //don't create a number\r\n        c = String.fromCharCode(number);\r\n        string.push(c);\r\n      }\r\n      string.push(pass.charCodeAt(i) - 19);\r\n    }\r\n    return string.join(\"\");\r\n  }\r\n  function decrypted(encPass) {\r\n    var string = [];\r\n    var string1 = [];\r\n    var c;\r\n    for (var i = 0; i < encPass.length; i++) {\r\n      c = encPass.charAt(i);\r\n      if (c.charCodeAt(0) > 47 && c.charCodeAt(0) < 58) {\r\n        do {\r\n          string.push(c);\r\n          i= i +1;\r\n          if (i < encPass.length) {\r\n            c = encPass.charAt(i);\r\n          } else {\r\n            break;\r\n          }\r\n        } while (c.charCodeAt(0) > 47 && c.charCodeAt(0) < 58);\r\n        string1.push(String.fromCharCode(parseInt(string.join(\"\")) + 19));\r\n        string = [];\r\n      }\r\n    }\r\n    return string1.join(\"\");\r\n  }\r\n  return (\r\n    <div>\r\n      <main role=\"main\">\r\n        <Jumbotron className=\"text-center\">\r\n          <Container>\r\n            <div>\r\n              <Card body outline color=\"success\">\r\n                <CardImg\r\n                  top\r\n                  width=\"80\"\r\n                  height=\"250\"\r\n                  src=\"https://i.ibb.co/x6ZdLxZ/Sandwich.png\"\r\n                  alt=\"Card image cap\"\r\n                />\r\n                <CardBody>\r\n                  <InputGroup>\r\n                    <InputGroupAddon addonType=\"prepend\">\r\n                      username\r\n                    </InputGroupAddon>\r\n                    <Input\r\n                      onChange={(e) => onChangeUserName(`${e.target.value}`)}\r\n                      onKeyPress={handleKeyPress}\r\n                    />\r\n                  </InputGroup>\r\n                  <br />\r\n                  <InputGroup>\r\n                    <InputGroupAddon addonType=\"prepend\">\r\n                      password\r\n                    </InputGroupAddon>\r\n                    <Input\r\n                      type=\"password\"\r\n                      onChange={(e) => onChangePassword(`${e.target.value}`)}\r\n                      onKeyPress={handleKeyPress}\r\n                    />\r\n                  </InputGroup>\r\n                  <br />\r\n                  <Button onClick={onLogin}>Login</Button>\r\n                </CardBody>\r\n              </Card>\r\n            </div>\r\n          </Container>\r\n        </Jumbotron>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","C:\\Users\\AKIF\\Desktop\\intro-to-web-development\\src\\components\\AllRecipies\\Footer.jsx",[],"C:\\Users\\AKIF\\Desktop\\intro-to-web-development\\src\\components\\AllRecipies\\Header.jsx",["71"],"import React, { useState } from \"react\";\r\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Navbar,\r\n  NavbarBrand,\r\n  NavLink,\r\n  ButtonDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from \"reactstrap\";\r\nimport { useStore } from \"../../redux/store/Provider\";\r\nimport { clear } from \"../../redux/actions/LoginAction\";\r\nconst Header = () => {\r\n  const [dropdownOpen, setOpen] = useState(false);\r\n  const toggle = () => setOpen(!dropdownOpen);\r\n  const [{ isLogged, user }, dispatch] = useStore();\r\n  function onLogin() {}\r\n  function onLogout() {\r\n    dispatch(clear());\r\n  }\r\n  return (\r\n    <div>\r\n      <header>\r\n        <Navbar color=\"dark\" dark id=\"navbar\">\r\n          <Container>\r\n            <NavbarBrand className=\"d-flex align-items-center mr-auto\">\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"20\"\r\n                height=\"20\"\r\n                viewBox=\"0 0 24 24\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                className=\"mr-2\"\r\n              />\r\n              <div className=\"navbar-brand\" href=\"/\">\r\n                <img\r\n                  src=\"https://i.ibb.co/12pWKWZ/Sandwich2.png\"\r\n                  width=\"70\"\r\n                  height=\"50\"\r\n                  className=\"d-inline-block align-top\"\r\n                  alt=\"\"\r\n                  loading=\"lazy\"\r\n                />\r\n              </div>\r\n              <NavLink style={{ color: \"white\" }} tag={RouterNavLink} to=\"/\">\r\n                {\" \"}\r\n                Home{\" \"}\r\n              </NavLink>\r\n              <NavLink\r\n                style={{ color: \"white\" }}\r\n                tag={RouterNavLink}\r\n                to=\"login2\"\r\n              >\r\n                {\" \"}\r\n                All Recipes{\" \"}\r\n              </NavLink>\r\n            </NavbarBrand>\r\n            {isLogged ? (\r\n              <div className=\"d-flex align-items-right\">\r\n                <ButtonDropdown isOpen={dropdownOpen} toggle={toggle}>\r\n                  <DropdownToggle caret>{user}</DropdownToggle>\r\n                  <DropdownMenu>\r\n                    <DropdownItem tag={RouterNavLink}\r\n                to=\"login2\">Favorite Recipes</DropdownItem>\r\n                  </DropdownMenu>\r\n                </ButtonDropdown>\r\n                <NavLink\r\n                  style={{ color: \"white\" }}\r\n                  tag={RouterNavLink}\r\n                  to=\"/\"\r\n                  onClick={onLogout}\r\n                >\r\n                  {\" \"}\r\n                  <strong> Logout </strong>\r\n                </NavLink>\r\n              </div>\r\n            ) : (\r\n              <NavLink\r\n                style={{ color: \"white\" }}\r\n                tag={RouterNavLink}\r\n                to=\"/login\"\r\n              >\r\n                {\" \"}\r\n                <strong> Login </strong>\r\n              </NavLink>\r\n            )}\r\n          </Container>\r\n        </Navbar>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\AKIF\\Desktop\\intro-to-web-development\\src\\components\\AllRecipies\\AllRecipies.jsx",[],"C:\\Users\\AKIF\\Desktop\\intro-to-web-development\\src\\components\\AllRecipies\\RecipeList.jsx",[],"C:\\Users\\AKIF\\Desktop\\intro-to-web-development\\src\\components\\AllRecipies\\ShowRecipies.jsx",[],"C:\\Users\\AKIF\\Desktop\\intro-to-web-development\\src\\components\\Login\\Login5.jsx",[],"C:\\Users\\AKIF\\Desktop\\intro-to-web-development\\src\\redux\\store\\Provider.js",[],"C:\\Users\\AKIF\\Desktop\\intro-to-web-development\\src\\redux\\reducers\\LoginReducer.js",[],"C:\\Users\\AKIF\\Desktop\\intro-to-web-development\\src\\redux\\actions\\LoginActionTypes.js",[],"C:\\Users\\AKIF\\Desktop\\intro-to-web-development\\src\\redux\\actions\\LoginAction.js",[],"C:\\Users\\AKIF\\Desktop\\intro-to-web-development\\src\\components\\Redirect.js",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":20,"column":10,"nodeType":"78","messageId":"79","endLine":20,"endColumn":18},{"ruleId":"76","severity":1,"message":"80","line":22,"column":10,"nodeType":"78","messageId":"79","endLine":22,"endColumn":21},{"ruleId":"76","severity":1,"message":"81","line":22,"column":23,"nodeType":"78","messageId":"79","endLine":22,"endColumn":37},{"ruleId":"76","severity":1,"message":"82","line":23,"column":10,"nodeType":"78","messageId":"79","endLine":23,"endColumn":15},{"ruleId":"76","severity":1,"message":"83","line":19,"column":12,"nodeType":"78","messageId":"79","endLine":19,"endColumn":19},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'password' is assigned a value but never used.","Identifier","unusedVar","'dncPassword' is assigned a value but never used.","'setDncPassword' is assigned a value but never used.","'store' is assigned a value but never used.","'onLogin' is defined but never used.","no-global-assign","no-unsafe-negation"]